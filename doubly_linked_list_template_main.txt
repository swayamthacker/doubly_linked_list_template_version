#include <iostream>
#include <string>
using namespace std;

#include "doubly_linked_list.h"
int temp = -1;
int integer;
int value;


int main()
{
    DoublyLinkedList<int> list;
     while(temp!=0)
	{
        cout<<"Enter 1 to enter an element onto the list (this is the template)"<<endl;
		cout<<"Enter 2 to traverse the list from the root"<<endl;
		cout<<"Enter 3 to traverse the list from the tail"<<endl;
		cout<<"Enter 4 to delete a node"<<endl;
		cout<<"Enter 0 to exit"<<endl;
		cin>>temp;

    switch(temp)
	{
        case 1:
		{
            //push implementation, tests for when the stack is full.
            cout<<"Please enter the value that needs to be added to the list"<<endl;
			cin>>integer;
            list.insertnode(integer);
			break;
        }
        case 2:
        {
            cout<<"The elements starting from the root are"<<endl;
            list.traversefromroot();
            break;
        }
        case 3:
        {
            cout<<"The elements starting from the tail are"<<endl;
            list.traversefromtail();
            break;
        }
        case 4:
        {
            cout<<"Please enter the value you want to remove"<<endl;
            cin>>value;
            //if the output of traversefromroot was 1 2 3 4 5 6 7 8, after this step, it should be 1 2 4 5 6 7 8.

            list.deletenode(value);

            break;
        }
	}
	}
	return 0;
}
